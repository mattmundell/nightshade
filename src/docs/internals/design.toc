\contentsline {part}{I\hspace {1em}System Architecture}{3}
\contentsline {chapter}{\numberline {1}Package and File Structure}{4}
\contentsline {section}{\numberline {1.1}RCS and build areas}{4}
\contentsline {subsection}{\numberline {1.1.1}Configuration Management}{5}
\contentsline {subsection}{\numberline {1.1.2}RCS Branches}{5}
\contentsline {section}{\numberline {1.2}Releases}{5}
\contentsline {section}{\numberline {1.3}Source Tree Structure}{5}
\contentsline {section}{\numberline {1.4}Package structure}{6}
\contentsline {chapter}{\numberline {2}System Building}{7}
\contentsline {section}{\numberline {2.1}Compiling the C Startup Code}{7}
\contentsline {section}{\numberline {2.2}Compiling the Lisp Code}{7}
\contentsline {section}{\numberline {2.3}Building Core Images}{8}
\contentsline {part}{II\hspace {1em}Compiler Organization}{9}
\contentsline {chapter}{\numberline {3}Compiler Overview}{10}
\contentsline {chapter}{\numberline {4}The Implicit Continuation Representation}{12}
\contentsline {section}{\numberline {4.1}Tail sets}{13}
\contentsline {section}{\numberline {4.2}Hairy function representation}{14}
\contentsline {section}{\numberline {4.3}ICR representation of non-local exits}{14}
\contentsline {section}{\numberline {4.4}Block compilation}{15}
\contentsline {section}{\numberline {4.5}Entry points}{16}
\contentsline {chapter}{\numberline {5}ICR conversion}{18}
\contentsline {section}{\numberline {5.1}Canonical forms}{18}
\contentsline {section}{\numberline {5.2}Inline functions}{19}
\contentsline {section}{\numberline {5.3}Compilation policy}{20}
\contentsline {section}{\numberline {5.4}Notes}{20}
\contentsline {chapter}{\numberline {6}Local call analysis}{21}
\contentsline {chapter}{\numberline {7}Find components}{22}
\contentsline {chapter}{\numberline {8}ICR optimize}{23}
\contentsline {section}{\numberline {8.1}Goals for ICR optimizations}{24}
\contentsline {section}{\numberline {8.2}Flow graph simplification}{25}
\contentsline {section}{\numberline {8.3}Forward ICR optimizations}{25}
\contentsline {section}{\numberline {8.4}Backward ICR optimizations}{26}
\contentsline {chapter}{\numberline {9}Type checking}{27}
\contentsline {chapter}{\numberline {10}Constraint propagation}{29}
\contentsline {chapter}{\numberline {11}ICR finalize}{31}
\contentsline {chapter}{\numberline {12}Environment analysis}{32}
\contentsline {chapter}{\numberline {13}Virtual Machine Representation Introduction}{34}
\contentsline {chapter}{\numberline {14}Global TN assignment}{35}
\contentsline {chapter}{\numberline {15}Local TN assignment}{37}
\contentsline {chapter}{\numberline {16}Control optimization}{39}
\contentsline {chapter}{\numberline {17}VMR conversion}{41}
\contentsline {section}{\numberline {17.1}Stack analysis}{42}
\contentsline {section}{\numberline {17.2}Non-local exit}{44}
\contentsline {chapter}{\numberline {18}Copy propagation}{45}
\contentsline {chapter}{\numberline {19}Representation selection}{46}
\contentsline {chapter}{\numberline {20}Lifetime analysis}{47}
\contentsline {section}{\numberline {20.1}Flow analysis}{47}
\contentsline {section}{\numberline {20.2}Conflict detection}{47}
\contentsline {chapter}{\numberline {21}Packing}{50}
\contentsline {chapter}{\numberline {22}Code generation}{53}
\contentsline {chapter}{\numberline {23}Assembly}{54}
\contentsline {chapter}{\numberline {24}Dumping}{55}
\contentsline {chapter}{\numberline {25}User Interface}{57}
\contentsline {section}{\numberline {25.1}Error Message Utilities}{57}
\contentsline {section}{\numberline {25.2}Source Paths}{57}
\contentsline {part}{III\hspace {1em}Compiler Retargeting}{58}
\contentsline {chapter}{\numberline {26}Storage bases and classes}{60}
\contentsline {chapter}{\numberline {27}Type system parameterization}{62}
\contentsline {chapter}{\numberline {28}VOP Definition}{63}
\contentsline {section}{\numberline {28.1}Lifetime model}{63}
\contentsline {section}{\numberline {28.2}VOP Cost model}{64}
\contentsline {section}{\numberline {28.3}Efficiency notes}{64}
\contentsline {chapter}{\numberline {29}Assembler Retargeting}{65}
\contentsline {chapter}{\numberline {30}Writing Assembly Code}{66}
\contentsline {chapter}{\numberline {31}Required VOPS}{67}
\contentsline {section}{\numberline {31.1}Function Call}{68}
\contentsline {subsection}{\numberline {31.1.1}Registers and frame format}{68}
\contentsline {subsection}{\numberline {31.1.2}Full call}{68}
\contentsline {subsection}{\numberline {31.1.3}Unknown values return}{68}
\contentsline {subsection}{\numberline {31.1.4}External Entry Points}{68}
\contentsline {section}{\numberline {31.2}Calls}{69}
\contentsline {chapter}{\numberline {32}Standard Primitives}{74}
\contentsline {chapter}{\numberline {33}Customizing VMR Conversion}{75}
\contentsline {section}{\numberline {33.1}Constant Operands}{75}
\contentsline {section}{\numberline {33.2}Supporting Multiple Hardware Configurations}{75}
\contentsline {section}{\numberline {33.3}Special-case VMR convert methods}{76}
\contentsline {part}{IV\hspace {1em}Run-Time system}{77}
\contentsline {chapter}{\numberline {34}The Type System}{78}
\contentsline {chapter}{\numberline {35}The Info Database}{79}
\contentsline {chapter}{\numberline {36}Debugger Information}{82}
\contentsline {section}{\numberline {36.1}The Debug-Info Structure}{82}
\contentsline {chapter}{\numberline {37}Object Format}{88}
\contentsline {section}{\numberline {37.1}Tagging}{88}
\contentsline {section}{\numberline {37.2}GC Comments}{88}
\contentsline {section}{\numberline {37.3}Structures}{89}
\contentsline {section}{\numberline {37.4}Fixnums}{89}
\contentsline {section}{\numberline {37.5}Other-immediates}{90}
\contentsline {section}{\numberline {37.6}Data-Blocks and Header-Word Format}{90}
\contentsline {section}{\numberline {37.7}Data-Blocks and Other-immediates Typing}{91}
\contentsline {section}{\numberline {37.8}Strings}{92}
\contentsline {section}{\numberline {37.9}Symbols and NIL}{92}
\contentsline {section}{\numberline {37.10}Bignums}{94}
\contentsline {section}{\numberline {37.11}Code Data-Blocks}{94}
\contentsline {section}{\numberline {37.12}Closure Format}{97}
\contentsline {section}{\numberline {37.13}Function call}{97}
\contentsline {section}{\numberline {37.14}Memory Layout}{97}
\contentsline {section}{\numberline {37.15}System Pointers}{98}
\contentsline {chapter}{\numberline {38}Memory Management}{99}
\contentsline {section}{\numberline {38.1}Stacks and Globals}{99}
\contentsline {section}{\numberline {38.2}Heap Layout}{99}
\contentsline {section}{\numberline {38.3}Garbage Collection}{99}
\contentsline {chapter}{\numberline {39}Interface to C and Assembler}{100}
\contentsline {chapter}{\numberline {40}Low-level debugging}{101}
\contentsline {chapter}{\numberline {41}Core File Format}{102}
\contentsline {chapter}{\numberline {42}Fasload File Format}{103}
\contentsline {section}{\numberline {42.1}General}{103}
\contentsline {section}{\numberline {42.2}Strategy}{103}
\contentsline {section}{\numberline {42.3}Fasload Language}{104}
\contentsline {chapter}{\numberline {A}Glossary}{111}
